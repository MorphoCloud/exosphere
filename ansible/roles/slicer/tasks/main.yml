---
- name: 'operating system-specific variables imported'
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - "{{ role_path }}/vars"

- name: 'Slicer prerequisites installed'
  package:
    name: '{{ item }}'
    state: 'present'
  loop: '{{ slicer_prerequisites_package_names }}'

- name: 'dist directory created'
  ansible.builtin.file:
    path: "{{ install_dir }}/dist"
    state: directory
    owner: "exouser"
    group: "exouser"

#- name: 'helper script downloaded'
#  get_url:
#    url: "https://raw.githubusercontent.com/Slicer/SlicerDocker/e9353bd4e1b861c5fb78ac4cd90553696b119d22/scripts/slicer-download.sh"
#    dest: "{{ install_dir }}/dist/slicer-download.sh"
#    mode: "744"
#    owner: "exouser"
#    group: "exouser"

- name: 'File "slicer-download.sh" copied'
  copy:
    src: 'slicer-download.sh'
    dest: "{{ install_dir }}/dist/slicer-download.sh"
    mode: "744"
    owner: "exouser"
    group: "exouser"

- name: 'Slicer application installed'
  become: yes
  become_user: exouser
  command: "{{ install_dir }}/dist/slicer-download.sh -d {{ install_dir }}/Slicer -v {{ slicer_release_id }} -s"
  args:
    creates: "{{ install_dir }}/Slicer"

- name: 'File "Slicer.desktop" installed as panel launcher'
  copy:
    src: 'Slicer.desktop'
    dest: '/home/exouser/.config/xfce4/panel/launcher-21/Slicer.desktop'
    owner: "exouser"
    group: "exouser"
  when: 'gui_enabled is defined and gui_enabled == true'

- name: 'Placeholder "Slicer-X.Y" updated in file "Slicer.desktop"'
  ansible.builtin.replace:
    path: "/home/exouser/.config/xfce4/panel/launcher-21/Slicer.desktop"
    regexp: 'Slicer\-X\.Y'
    replace: 'Slicer-{{ slicer_version["major"] }}.{{ slicer_version["minor"] }}'
  when: 'gui_enabled is defined and gui_enabled == true'

- name: 'File "Slicer.desktop" installed as Desktop launcher'
  copy:
    src: '/home/exouser/.config/xfce4/panel/launcher-21/Slicer.desktop'
    dest: '/home/exouser/Desktop/Slicer.desktop'
    owner: "exouser"
    group: "exouser"
  when: 'gui_enabled is defined and gui_enabled == true'

- name: 'Slicer extensions installed'
  become: yes
  become_user: exouser
  command: "{{ install_dir }}/dist/slicer-download.sh -d {{ install_dir }}/Slicer -v {{ slicer_release_id }} -e {{ item }}"
  loop: '{{ slicer_extensions }}'

- name: 'File "husky_small.png" downloaded'
  get_url:
    url: "https://raw.githubusercontent.com/SlicerMorph/Images/main/husky_small.png"
    dest: "/home/exouser/Downloads/husky_small.png"
    mode: "644"
    owner: "exouser"
    group: "exouser"
  when: 'gui_enabled is defined and gui_enabled == true'

#- name: 'File "xfce4-desktop.xml" installed'
#  copy:
#    src: 'xfce4-desktop.xml'
#    dest: '/home/exouser/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml'
#    mode: "644"
#    owner: "exouser"
#    group: "exouser"
#  when: 'gui_enabled is defined and gui_enabled == true'

- name: Configure Xfce4 desktop configuration file
  block:
    - name: Check if Xfce4 desktop configuration file exists
      ansible.builtin.stat:
        path: /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml
      register: xfce4_desktop_config

    - name: Create Xfce4 desktop configuration if necessary
      ansible.builtin.copy:
        dest: /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml
        mode: 0644
        src: xfce4-desktop.xml
      when:
        - not xfce4_desktop_config.stat.exists

    - name: Set SlicerMorph desktop background
      community.general.xml:
        attribute: value
        path: /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml
        value: /home/exouser/Downloads/husky_small.png
        xpath: //property[@name="last-image"]
  when: 'gui_enabled is defined and gui_enabled == true'
