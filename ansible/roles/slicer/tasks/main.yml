---
- name: 'operating system-specific variables imported'
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Stop service unattended-upgrades
  ansible.builtin.systemd_service:
    name: unattended-upgrades
    state: stopped

- name: Stop service apt-daily-upgrade.timer
  ansible.builtin.systemd_service:
    name: apt-daily-upgrade.timer
    state: stopped

- name: 'Slicer prerequisites installed'
  package:
    name: '{{ item }}'
    state: 'present'
  loop: '{{ slicer_prerequisites_package_names }}'

- name: 'dist directory created'
  ansible.builtin.file:
    path: "{{ install_dir }}/dist"
    state: directory
    owner: "exouser"
    group: "exouser"

#- name: 'helper script downloaded'
#  get_url:
#    url: "https://raw.githubusercontent.com/Slicer/SlicerDocker/e9353bd4e1b861c5fb78ac4cd90553696b119d22/scripts/slicer-download.sh"
#    dest: "{{ install_dir }}/dist/slicer-download.sh"
#    mode: "744"
#    owner: "exouser"
#    group: "exouser"

- name: 'File "slicer-download.sh" copied'
  copy:
    src: 'slicer-download.sh'
    dest: "{{ install_dir }}/dist/slicer-download.sh"
    mode: "744"
    owner: "exouser"
    group: "exouser"

- name: 'Slicer application installed'
  become: yes
  become_user: exouser
  command: "{{ install_dir }}/dist/slicer-download.sh -d {{ install_dir }}/Slicer -v {{ slicer_release_id }} -s"
  args:
    creates: "{{ install_dir }}/Slicer"

- name: 'File "Slicer.desktop" installed as panel launcher'
  copy:
    src: 'Slicer.desktop'
    dest: '/usr/share/applications/Slicer.desktop'
    owner: "exouser"
    group: "exouser"
  when: 'gui_enabled is defined and gui_enabled == true'

- name: 'Placeholder "Slicer-X.Y" updated in file "Slicer.desktop"'
  ansible.builtin.replace:
    path: "/usr/share/applications/Slicer.desktop"
    regexp: 'Slicer\-X\.Y'
    replace: 'Slicer-{{ slicer_version["major"] }}.{{ slicer_version["minor"] }}'
  when: 'gui_enabled is defined and gui_enabled == true'

- name: 'Check if system has at least one GPU'
  ansible.builtin.command: nvidia-detector
  register: nvidia_detector_cmd

- name: 'Exec command in file "Slicer.desktop" updated to use "vglrun -d egl" wrapper'
  ansible.builtin.replace:
    path: "/usr/share/applications/Slicer.desktop"
    regexp: '\/home\/exouser\/Slicer\/Slicer'
    replace: 'vglrun -d egl /home/exouser/Slicer/Slicer'
  when: 'nvidia_detector_cmd.stdout != "None" and gui_enabled is defined and gui_enabled == true'

- name: 'File "Slicer.desktop" installed as Desktop launcher'
  copy:
    src: '/usr/share/applications/Slicer.desktop'
    dest: '/home/exouser/Desktop/Slicer.desktop'
    owner: "exouser"
    group: "exouser"
  when: 'gui_enabled is defined and gui_enabled == true'

- name: 'File "slicer-install-extension.py" copied'
  copy:
    src: 'slicer-install-extension.py'
    dest: "{{ install_dir }}/dist/slicer-install-extension.py"
    mode: "644"
    owner: "exouser"
    group: "exouser"

- name: 'Slicer extensions installed'
  become: yes
  become_user: exouser
  command: "{{ install_dir }}/Slicer/Slicer --disable-modules --python-script {{ install_dir }}/dist/slicer-install-extension.py {{ item }}"
  loop: '{{ slicer_extensions }}'
  environment:
    DISPLAY: :1.0

- name: 'File "husky_small.png" downloaded'
  get_url:
    url: "https://raw.githubusercontent.com/SlicerMorph/Images/main/husky_small.png"
    dest: "/home/exouser/Downloads/husky_small.png"
    mode: "644"
    owner: "exouser"
    group: "exouser"
  when: 'gui_enabled is defined and gui_enabled == true'

# See https://github.com/jamescherti/watch-xfce-xfconf
- name: 'Theme name updated to "Yaru-magenta"'
  become: yes
  become_user: exouser
  xfconf:
    channel: "xsettings"
    property: "/Net/ThemeName"
    value_type: "string"
    value: "Yaru-magenta"
  environment:
    XAUTHORITY: /home/exouser/.Xauthority
    DISPLAY: :1.0

- name: 'Icon theme name updated to "Yaru-magenta"'
  become: yes
  become_user: exouser
  xfconf:
    channel: "xsettings"
    property: "/Net/IconThemeName"
    value_type: "string"
    value: "Yaru-magenta"
  environment:
    XAUTHORITY: /home/exouser/.Xauthority
    DISPLAY: :1.0

- name: 'Desktop background updated'
  become: yes
  become_user: exouser
  xfconf:
    channel: "xfce4-desktop"
    property: "/backdrop/screen0/monitorVNC-0/workspace0/last-image"
    value_type: "string"
    value: "/home/exouser/Downloads/husky_small.png"
  environment:
    XAUTHORITY: /home/exouser/.Xauthority
    DISPLAY: :1.0

- name: 'Desktop background centered'
  become: yes
  become_user: exouser
  xfconf:
    channel: "xfce4-desktop"
    property: "/backdrop/screen0/monitorVNC-0/workspace0/image-style"
    value_type: "int"
    value: "1"
  environment:
    XAUTHORITY: /home/exouser/.Xauthority
    DISPLAY: :1.0

- name: 'Check if file "/home/exouser/.config/xfce4/panel-configured" exists'
  stat:
    path: "/home/exouser/.config/xfce4/panel-configured"
  register: panel_configured

- name: 'Script "update-xfce4-panel.sh" installed'
  copy:
    src: 'update-xfce4-panel.sh'
    dest: '/home/exouser/.config/xfce4/update-xfce4-panel.sh'
    mode: "744"
    owner: "exouser"
    group: "exouser"
  when: 'gui_enabled is defined and gui_enabled == true'

- name: 'xfce4-panel settings updated'
  become: yes
  become_user: exouser
  ansible.builtin.script: |
    /home/exouser/.config/xfce4/update-xfce4-panel.sh
    # Create a marker file to indicate that the panel has been configured
    touch /home/exouser/.config/xfce4/panel-configured
  environment:
    XAUTHORITY: /home/exouser/.Xauthority
    DISPLAY: :1.0
  when: 'not panel_configured.stat.exists and gui_enabled is defined and gui_enabled == true'

- name: 'VirtualGL package downloaded'
  get_url:
    url: "https://github.com/VirtualGL/virtualgl/releases/download/3.1.1/virtualgl_3.1.1_amd64.deb"
    dest: "/home/exouser/Downloads/virtualgl_3.1.1_amd64.deb"
    mode: "644"
    owner: "exouser"
    group: "exouser"
  when: 'nvidia_detector_cmd.stdout != "None" and gui_enabled is defined and gui_enabled == true'

- name: 'VirtualGL package installed'
  command: apt-get install -y /home/exouser/Downloads/virtualgl_3.1.1_amd64.deb
  when: 'nvidia_detector_cmd.stdout != "None" and gui_enabled is defined and gui_enabled == true'

- name: 'VirtualGL configured'
  command: /opt/VirtualGL/bin/vglserver_config +egl +s +f
  when: 'nvidia_detector_cmd.stdout != "None" and gui_enabled is defined and gui_enabled == true'

- name: Start service apt-daily-upgrade.timer
  ansible.builtin.systemd_service:
    name: apt-daily-upgrade.timer
    state: started

- name: Start service unattended-upgrades
  ansible.builtin.systemd_service:
    name: unattended-upgrades
    state: started
