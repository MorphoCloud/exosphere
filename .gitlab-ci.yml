image: node:current-buster

stages:
  - build
  - dockerize
  - test
  - deploy

cache:
  key: ${CI_JOB_NAME}
  paths:
    - node_modules/
    - home/.elm
    - home/.npm
    - elm-stuff/

build_with_kaniko_e2e_firefox:
  stage: dockerize
  dependencies:
    - elm_make
  allow_failure: true
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - cp public/elm-web.js .
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - |
      TAGLIST="$CI_COMMIT_REF_NAME $CI_COMMIT_SHORT_SHA"
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then TAGLIST="$TAGLIST latest"; fi
      if [[ -n "$TAGLIST" ]]; then
        for TAG in $TAGLIST; do
          FORMATTEDTAGLIST="${FORMATTEDTAGLIST} --destination $CI_REGISTRY_IMAGE:e2e-firefox-$TAG ";
        done;
      fi
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/integration-tests/docker/SeleniumFirefoxAndExosphere/Dockerfile $FORMATTEDTAGLIST



build_with_kaniko_e2e_chrome:
  stage: dockerize
  dependencies:
    - elm_make
  allow_failure: true
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - cp public/elm-web.js .
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - |
      TAGLIST="$CI_COMMIT_REF_NAME $CI_COMMIT_SHORT_SHA"
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then TAGLIST="$TAGLIST latest"; fi
      if [[ -n "$TAGLIST" ]]; then
        for TAG in $TAGLIST; do
          FORMATTEDTAGLIST="${FORMATTEDTAGLIST} --destination $CI_REGISTRY_IMAGE:e2e-chrome-$TAG ";
        done;
      fi
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/integration-tests/docker/SeleniumChromeAndExosphere/Dockerfile $FORMATTEDTAGLIST



elm_make:
  stage: build
  before_script:
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/327#note_225643576
    - if [ -d home/.elm ]; then echo "Restoring ~/.elm"; mv home/.elm ~/; fi
    - if [ -d home/.npm ]; then echo "Restoring ~/.npm"; mv home/.npm ~/; fi
    - npm install elm@0.19.1-3
  script:
    - npx elm make src/Exosphere.elm --output public/elm-web.js
    - npx elm make src/ExosphereElectron.elm --output public/elm.js
    - cp index.html public/index.html
    - cp ports.js public/ports.js
    - cp -R assets public
    - cp -R fonts public
  after_script:
    - mkdir -p home && mv ~/.elm home
    - mkdir -p home && mv ~/.npm home
  artifacts:
    paths:
      - public

elm_analyse:
  stage: test
  before_script:
    - if [ -d home/.elm ]; then echo "Restoring ~/.elm"; mv home/.elm ~/; fi
    - if [ -d home/.npm ]; then echo "Restoring ~/.npm"; mv home/.npm ~/; fi
    - npm install elm@0.19.1-3 elm-analyse elm-format
  script:
    - npx elm-analyse
    - npx elm-format --validate src
  after_script:
    - mkdir -p home && mv ~/.elm home
    - mkdir -p home && mv ~/.npm home

elm_test:
  stage: test
  before_script:
    - if [ -d home/.elm ]; then echo "Restoring ~/.elm"; mv home/.elm ~/; fi
    - if [ -d home/.npm ]; then echo "Restoring ~/.npm"; mv home/.npm ~/; fi
    - npm install elm@0.19.1-3 elm-test@0.19.1
  script:
    - npx elm-test
  after_script:
    - mkdir -p home && mv ~/.elm home
    - mkdir -p home && mv ~/.npm home

pages:
  stage: deploy
  dependencies:
    - elm_make
  script:
    - touch public/index.html
  artifacts:
    paths:
      - public
  only:
    - master

deploy_prod:
  stage: deploy
  dependencies:
    - elm_make
  before_script:
    # See https://docs.gitlab.com/ee/ci/ssh_keys/README.html
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DOGFOOD_SSH_PRIV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # https://docs.gitlab.com/ee/ci/ssh_keys/README.html#verifying-the-ssh-host-keys
    - echo "$DOGFOOD_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
  script:
    - 'cp environment-configs/try.exosphere.app-config.js public/config.js'
    - 'sed -i -e ''s/<base href="\/">/<base href="\/exosphere\/">/g'' public/index.html'
    - 'rsync -av --delete public exouser@dogfood.exosphere.app:'
  environment:
    name: prod
    url: https://try.exosphere.app/exosphere
  only:
    - master

deploy_jetstream:
  stage: deploy
  dependencies:
    - elm_make
  before_script:
    # See https://docs.gitlab.com/ee/ci/ssh_keys/README.html
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DOGFOOD_SSH_PRIV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # https://docs.gitlab.com/ee/ci/ssh_keys/README.html#verifying-the-ssh-host-keys
    - echo "$DOGFOOD_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
  script:
    - 'cp environment-configs/exosphere.jetstream-cloud.org-config.js public/config.js'
    - 'sed -i -e ''s/<base href="\/">/<base href="\/exosphere\/">/g'' public/index.html'
    - 'rsync -av --delete public exouser@dogfood.exosphere.app:jetstream-deploy/'
  environment:
    name: jetstream
    url: https://exosphere.jetstream-cloud.org/exosphere
  only:
    - master


deploy_dev:
  stage: deploy
  needs:
    - elm_make
  before_script:
    # See https://docs.gitlab.com/ee/ci/ssh_keys/README.html
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DOGFOOD_SSH_PRIV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # https://docs.gitlab.com/ee/ci/ssh_keys/README.html#verifying-the-ssh-host-keys
    - echo "$DOGFOOD_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
  script:
    - 'cp environment-configs/try-dev.exosphere.app-config.js public/config.js'
    - 'sed -i -e ''s/<base href="\/">/<base href="\/exosphere\/">/g'' public/index.html'
    - 'rsync -av --delete public exouser@dogfood.exosphere.app:dev-deploy/'
  environment:
    name: dev
    url: https://try-dev.exosphere.app/exosphere
  only:
    - dev


e2e:
  stage: test
  dependencies:
    - build_with_kaniko_e2e_firefox
    - build_with_kaniko_e2e_chrome
  image: python:3
  allow_failure: true
  retry: 2
  services:
    - name: "$CI_REGISTRY_IMAGE:e2e-firefox-$CI_COMMIT_SHORT_SHA"
      alias: e2e-firefox.exosphere.service
    - name: "$CI_REGISTRY_IMAGE:e2e-chrome-$CI_COMMIT_SHORT_SHA"
      alias: e2e-chrome.exosphere.service
  before_script:
    - pip install -r integration-tests/requirements.txt
  script:
    - cd integration-tests
    - echo Run scenarios tagged @setup (Firefox browser)
    - behave --tags @setup -D EXOSPHERE_BASE_URL=http://localhost:8000 -D BROWSER=Firefox -D REMOTE_WEBDRIVER=yes -D COMMAND_EXECUTOR=http://e2e-firefox.exosphere.service:4444/wd/hub features/exosphere.feature
    - echo Run scenarios NOT tagged @setup (Firefox browser)
    - behave --tags ~@setup -D EXOSPHERE_BASE_URL=http://localhost:8000 -D BROWSER=Firefox -D REMOTE_WEBDRIVER=yes -D COMMAND_EXECUTOR=http://e2e-firefox.exosphere.service:4444/wd/hub features/exosphere.feature
    - echo Run scenarios tagged @setup (Chrome browser)
    - behave --tags @setup -D EXOSPHERE_BASE_URL=http://localhost:8000 -D BROWSER=Chrome -D REMOTE_WEBDRIVER=yes -D COMMAND_EXECUTOR=http://e2e-chrome.exosphere.service:4444/wd/hub features/exosphere.feature
    - echo Run scenarios NOT tagged @setup (Chrome browser)
    - behave --tags ~@setup -D EXOSPHERE_BASE_URL=http://localhost:8000 -D BROWSER=Chrome -D REMOTE_WEBDRIVER=yes -D COMMAND_EXECUTOR=http://e2e-chrome.exosphere.service:4444/wd/hub features/exosphere.feature


include:
  - template: Dependency-Scanning.gitlab-ci.yml
