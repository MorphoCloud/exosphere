image: node:current-buster

stages:
  - build
  - test
  - deploy

cache:
  key: ${CI_JOB_NAME}
  paths:
    - node_modules/
    - home/.elm
    - home/.npm
    - elm-stuff/

elm_make:
  stage: build
  before_script:
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/327#note_225643576
    - if [ -d home/.elm ]; then echo "Restoring ~/.elm"; mv home/.elm ~/; fi
    - if [ -d home/.npm ]; then echo "Restoring ~/.npm"; mv home/.npm ~/; fi
    - npm install elm@0.19.1-3
  script:
    - npx elm make src/Exosphere.elm --output public/elm.js
    - npx elm make src/ExosphereElectron.elm --output public/elm-electron.js
    - cp index.html public/index.html
    - cp ports.js public/ports.js
    - cp -R assets public
    - cp -R fonts public
  after_script:
    - mkdir -p home && mv ~/.elm home
    - mkdir -p home && mv ~/.npm home
  artifacts:
    paths:
      - public

elm_analyse:
  stage: test
  before_script:
    - if [ -d home/.elm ]; then echo "Restoring ~/.elm"; mv home/.elm ~/; fi
    - if [ -d home/.npm ]; then echo "Restoring ~/.npm"; mv home/.npm ~/; fi
    - npm install elm@0.19.1-3 elm-analyse elm-format
  script:
    - npx elm-analyse
    - npx elm-format --validate src
  after_script:
    - mkdir -p home && mv ~/.elm home
    - mkdir -p home && mv ~/.npm home

elm_test:
  stage: test
  before_script:
    - if [ -d home/.elm ]; then echo "Restoring ~/.elm"; mv home/.elm ~/; fi
    - if [ -d home/.npm ]; then echo "Restoring ~/.npm"; mv home/.npm ~/; fi
    - npm install elm@0.19.1-3 elm-test@0.19.1
  script:
    - npx elm-test
  after_script:
    - mkdir -p home && mv ~/.elm home
    - mkdir -p home && mv ~/.npm home

pages:
  stage: deploy
  dependencies:
    - elm_make
  script:
    - touch public/index.html
  artifacts:
    paths:
      - public
  only:
    - master

deploy_prod:
  stage: deploy
  dependencies:
    - elm_make
  before_script:
    # See https://docs.gitlab.com/ee/ci/ssh_keys/README.html
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DOGFOOD_SSH_PRIV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # https://docs.gitlab.com/ee/ci/ssh_keys/README.html#verifying-the-ssh-host-keys
    - echo "$DOGFOOD_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
  script:
    - 'sed -i -e ''s/cloudCorsProxyUrl: .*/cloudCorsProxyUrl: \"https:\/\/try.exosphere.app\/proxy",/g'' public/ports.js'
    - 'sed -i -e ''s/urlPathPrefix: .*/urlPathPrefix: \"\/exosphere\/",/g'' public/ports.js'
    - 'sed -i -e ''s/<base href="\/">/<base href="exosphere">/g'' public/index.html'
    - 'rsync -av --delete public exouser@dogfood.exosphere.app:'
  environment:
    name: prod
    url: https://try.exosphere.app/exosphere
  only:
    - master

deploy_dev:
  stage: deploy
  dependencies:
    - elm_make
  before_script:
    # See https://docs.gitlab.com/ee/ci/ssh_keys/README.html
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DOGFOOD_SSH_PRIV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # https://docs.gitlab.com/ee/ci/ssh_keys/README.html#verifying-the-ssh-host-keys
    - echo "$DOGFOOD_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
  script:
    - 'sed -i -e ''s/cloudCorsProxyUrl: .*/cloudCorsProxyUrl: \"https:\/\/try-dev.exosphere.app\/proxy",/g'' public/ports.js'
    - 'sed -i -e ''s/urlPathPrefix: .*/urlPathPrefix: \"exosphere",/g'' public/ports.js'
    - 'sed -i -e ''s/<base href="\/">/<base href="\/exosphere\/">/g'' public/index.html'
    - 'rsync -av --delete public exouser@dogfood.exosphere.app:dev-deploy/'
  environment:
    name: dev
    url: https://try-dev.exosphere.app/exosphere
  only:
    - dev


include:
  - template: Dependency-Scanning.gitlab-ci.yml
