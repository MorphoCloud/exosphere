image: node:carbon-stretch

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - test
  - deploy

elm_make:
  stage: build
  cache:
    paths:
      - node_modules/
  before_script:
    - npm install elm@0.19.0
  script:
    - npx elm make src/Exosphere.elm --output public/elm.js
    - cp index.html public/index.html
    - cp ports.js public/ports.js
    - cp -R assets public
    - cp -R fonts public
  artifacts:
    paths:
      - public

# Waiting for elm-analyse to support Elm 0.19:
# https://github.com/stil4m/elm-analyse/issues/176

elm_analyse:
  stage: test
  cache:
    paths:
      - elm-stuff/
  before_script:
    - npm install elm@0.19.0 elm-analyse elm-format
  script:
    - npx elm-analyse || true

elm_test:
  stage: test
  cache:
    paths:
      - tests/elm-stuff/build-artifacts
  before_script:
    - npm install elm@0.19.0 elm-test
  script:
    - npx elm-test

pages:
  stage: deploy
  dependencies:
    - elm_make
  script:
    - file public/index.html
  artifacts:
    paths:
      - public
  only:
    - master

dependency_scanning:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json

